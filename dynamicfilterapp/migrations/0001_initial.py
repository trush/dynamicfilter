# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-08-04 20:59
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import dynamicfilterapp.validator


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DummyTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workerID', models.CharField(db_index=True, max_length=15)),
                ('start_time', models.IntegerField(default=0)),
                ('end_time', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='IP_Pair',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tasks_out', models.IntegerField(default=0)),
                ('tasks_collected', models.IntegerField(default=0)),
                ('value', models.FloatField(default=0.0)),
                ('num_no', models.IntegerField(default=0)),
                ('num_yes', models.IntegerField(default=0)),
                ('isDone', models.BooleanField(db_index=True, default=False)),
                ('status_votes', models.IntegerField(default=0)),
                ('inQueue', models.BooleanField(db_index=True, default=False)),
                ('isStarted', models.BooleanField(default=False)),
                ('true_answer', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_ID', models.IntegerField(default=None)),
                ('name', models.CharField(max_length=100)),
                ('item_type', models.CharField(max_length=50)),
                ('address', models.CharField(default=b'', max_length=200)),
                ('hasFailed', models.BooleanField(db_index=True, default=False)),
                ('shouldPass', models.BooleanField(db_index=True, default=False)),
                ('isStarted', models.BooleanField(default=False)),
                ('almostFalse', models.BooleanField(default=False)),
                ('inQueue', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Predicate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('predicate_ID', models.IntegerField(default=None)),
                ('num_tickets', models.IntegerField(default=1)),
                ('num_wickets', models.IntegerField(default=0)),
                ('queue_is_full', models.BooleanField(default=False)),
                ('queue_length', models.IntegerField(default=1)),
                ('_consensus_max', models.IntegerField(default=21)),
                ('_consensus_status', models.IntegerField(default=0)),
                ('_consensus_uncertainty_threshold', models.FloatField(default=0.1)),
                ('_consensus_decision_threshold', models.FloatField(default=0.7)),
                ('consensus_max_threshold', models.IntegerField(default=6)),
                ('selectivity', models.FloatField(default=0.1)),
                ('calculatedSelectivity', models.FloatField(default=0.1)),
                ('trueSelectivity', models.FloatField(default=0.0)),
                ('trueAmbiguity', models.FloatField(default=0.0)),
                ('totalTasks', models.FloatField(default=0.0)),
                ('totalNo', models.FloatField(default=0.0)),
                ('num_ip_complete', models.IntegerField(default=0)),
                ('cost', models.FloatField(default=0.0)),
                ('avg_completion_time', models.FloatField(default=0.0)),
                ('avg_tasks_per_pair', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_ID', models.IntegerField(default=None)),
                ('question_text', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.NullBooleanField(default=None)),
                ('workerID', models.CharField(db_index=True, max_length=15)),
                ('start_time', models.IntegerField(default=0)),
                ('end_time', models.IntegerField(default=0)),
                ('feedback', models.CharField(blank=True, max_length=500)),
                ('ip_pair', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='dynamicfilterapp.IP_Pair')),
            ],
        ),
        migrations.CreateModel(
            name='WorkerID',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workerID', models.IntegerField(db_index=True, unique=True, validators=[dynamicfilterapp.validator.validate_positive])),
            ],
        ),
        migrations.AddField(
            model_name='predicate',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dynamicfilterapp.Question'),
        ),
        migrations.AddField(
            model_name='ip_pair',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dynamicfilterapp.Item'),
        ),
        migrations.AddField(
            model_name='ip_pair',
            name='predicate',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dynamicfilterapp.Predicate'),
        ),
    ]
